{"version":3,"sources":["context/auth_context.js","pages/login.js","pages/signup.js","pages/reset.js","pages/profile.js","pages/forgot_password.js","App.js","index.js"],"names":["React","createContext","token","_id","email","name","image","login","tokenExpiration","updateImage","logout","LoginPage","props","state","isLogin","dialogText","dialogTitle","userPassword","isSuccess","signInHandler","event","preventDefault","trim","length","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","then","res","status","isOpen","Error","json","data","loginData","errors","message","setState","context","tokenExpiry","imageName","catch","err","classes","this","Container","component","maxWidth","Box","padding","borderBottom","CssBaseline","className","paper","Avatar","avatar","Typography","variant","form","onSubmit","Grid","container","spacing","item","xs","TextField","required","fullWidth","id","label","autoComplete","onChange","e","target","value","type","Button","color","submit","Link","href","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","autoFocus","Component","contextType","AuthContext","withStyles","theme","marginTop","display","flexDirection","alignItems","margin","backgroundColor","palette","secondary","main","width","SignUpPage","checkSuccess","signUpHandler","justify","history","push","ResetPasswordPage","match","params","newPassword","confirmPassword","resetPasswordHandler","noValidate","ProfilePage","showBrowse","showEdit","buttonText","file","localStorage","getItem","window","location","reload","uploadFile","form_data","FormData","append","response","result","setItem","error","AppBar","position","Toolbar","title","startIcon","Card","CardHeader","subheader","CardMedia","media","CardContent","Input","hidden","inputProps","accept","files","upload","root","paddingTop","flex","ForgotPasswordPage","sendEmailHandler","App","forgottenEmail","removeItem","Provider","from","to","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77b08799.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    _id : null,\n    email: null,\n    name: null,\n    image : 'profile.png',\n    login: (token, email, tokenExpiration , _id , image) => {},\n    updateImage : () => {},\n    logout: () => {}\n});","import React, {Component} from 'react'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport AuthContext from './../context/auth_context'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nconst useStyles = theme => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\nclass LoginPage extends Component{\n\n    static contextType=AuthContext;\n\n    state = {\n        isLogin: true,\n        dialogText : null,\n        dialogTitle :null,\n        email :null,\n        userPassword :null ,\n        name :null , \n        isSuccess : false\n      };\n    \n    \n      constructor(props) {\n        super(props);\n      }\n\n  \n    signInHandler = event => {\n\n        event.preventDefault();\n        const email = this.state.email\n        const userPassword = this.state.userPassword\n        \n        if (email.trim().length === 0 || userPassword.trim().length === 0) {\n          return;\n        }\n        var requestBody = {\n            query: `\n              query login($email: String!, $userPassword: String!) {\n                login(email: $email, userPassword: $userPassword){\n                  _id\n                  token\n                  tokenExpiry\n                  email\n                  name\n                  imageName\n                }\n              }\n            `,\n            variables: {\n              email: email,\n              userPassword:userPassword\n            }\n          };\n          fetch('http://localhost:5000/graphql', {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then((res) => {\n              \n              if (res.status !== 200 && res.status !== 201) {\n                  \n                  this.isSuccess=false;\n                  this.isOpen=true;\n                throw new Error('Failed!');\n              }\n             \n              return res.json();\n              \n            }).then((data) =>{\n              const loginData = data.data.login\n              if(!loginData){\n                this.state.dialogTitle= \"Failed\"\n                this.state.dialogText = data.errors[0].message\n                this.setState({isOpen:true})\n                throw new Error(data.errors[0].message);\n              }\n              \n              this.context.login(loginData.email , loginData.token , loginData.name ,loginData._id, loginData.tokenExpiry,loginData.imageName)\n              \n            })\n            .catch(err => {\n                \n              });\n    }\n\n    render(){\n        const {classes} = this.props\n        return(<Container component=\"main\" maxWidth=\"xs\" >\n        <Box padding=\"2rem\" borderBottom=\"3rem\" >\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} onSubmit={this.signInHandler}>\n            <Grid container spacing={2}>\n              \n              \n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange = {(e) => {\n                    this.state.email = e.target.value\n                }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  onChange = {(e) => {\n                    this.state.userPassword = e.target.value\n                }}\n                />\n              </Grid>\n              \n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign in\n            </Button>\n            <Grid container>\n            <Grid item xs>\n              <Link href=\"/forgot_password\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"sign_up\" variant=\"body2\">\n                {\"Register\"}\n              </Link>\n            </Grid>\n          </Grid>\n            \n          </form>\n        </div>\n        </Box>\n        <Dialog\n      open = {this.state.isOpen}\n      onClose={() => {this.setState({isOpen:false})}}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{this.state.dialogTitle}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {this.state.dialogText}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        \n        <Button onClick={() => {this.setState({isOpen:false})}} color=\"primary\" autoFocus>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n            \n      </Container>)\n    }\n}\n\nexport default withStyles(useStyles)(LoginPage)\n","import React, {Component} from 'react'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n//Form Styling\nconst useStyles = theme => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\n\nclass SignUpPage extends Component{\n\n    //current state\n    state = {\n        isLogin: true,\n        dialogText : null,\n        dialogTitle :null,\n        email :null,\n        userPassword :null ,\n        name :null , \n        isSuccess : false\n\n      };\n    \n      //constructor\n      constructor(props) {\n        super(props);\n      }\n\n      checkSuccess = false \n\n      signUpHandler = event => {\n        event.preventDefault();\n        const email = this.state.email\n        const name = this.state.name\n        const userPassword = this.state.userPassword\n    \n        if (email.trim().length === 0) {\n          return;\n        }\n\n        var requestBody = {\n            query: `\n              mutation signUp($name: String!, $email: String!, $userPassword: String!) {\n                signUp(userInput: {name: $name, email: $email, userPassword: $userPassword}) {\n                  name\n                  email\n                  userPassword\n                }\n              }\n            `,\n\n            variables: {\n              email: email,\n              name : name ,\n              userPassword: userPassword\n            }\n        }\n        \n        fetch('http://localhost:5000/graphql', {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n          .then(res => {\n                \n              if (res.status !== 200 && res.status !== 201) {\n              this.state.dialogText = \"You have already registered. \";\n              this.state.dialogTitle = \"ERROR\"\n              \n              this.setState({isOpen:true});\n                throw new Error('Failed here!');\n              }\n              this.state.dialogText = \"Welcome \"+this.state.name+\"!! Your registration is successful\";\n              this.state.dialogTitle = \"SUCCESS\"\n              this.setState({isOpen:true});\n              this.checkSuccess =true\n          })\n          .catch(err => {\n            \n          });     \n      }     \n\n    render(){\n        const {classes} = this.props\n        return(<Container component=\"main\" maxWidth=\"xs\" >\n        <Box  padding=\"2rem\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n          <form className={classes.form} onSubmit={this.signUpHandler}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  onChange = {(e) => {\n                      this.state.name = e.target.value\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  type=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  onChange = {(e) => {\n                    this.state.email = e.target.value\n                }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  onChange = {(e) => {\n                    this.state.userPassword = e.target.value\n                }}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign Up\n            </Button>\n            <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n            </Grid>\n          </form>\n        </div>\n        </Box>\n        <Dialog\n          open = {this.state.isOpen}\n          onClose={() => {this.setState({isOpen:false})}}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n        <DialogTitle id=\"alert-dialog-title\">{this.state.dialogTitle}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {this.state.dialogText}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={()=>{this.checkSuccess == true ? this.props.history.push('/') : this.setState({isOpen:false})}} color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>)\n    }\n}\n\nexport default withStyles(useStyles)(SignUpPage)\n","import React, { Component } from 'react'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport AuthContext from './../context/auth_context'\n\n//Form Styling\nconst useStyles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\n\nclass ResetPasswordPage extends Component {\n\n  static contextType = AuthContext\n \n\n  //constructor\n  constructor(props) {\n    super(props);\n  }\n\n   //current state\n   state = {\n    isLogin: true,\n    email: this.props.match.params.id,\n    newPassword: null,\n    confirmPassword: null,\n\n  };\n\n\n  resetPasswordHandler = event => {\n    event.preventDefault();\n    const email = this.state.email\n    const userPassword = this.state.newPassword\n    const confirmPassword = this.state.confirmPassword\n\n    if (userPassword.trim().length === 0 || confirmPassword.trim().length === 0) {\n      return;\n    }\n    if (userPassword != confirmPassword) {\n      throw new Error('Passwords do not match')\n    }\n    var requestBody = {\n      query: `\n                mutation resetPassword($email: String!, $userPassword: String!) {\n                  resetPassword(email: $email, userPassword: $userPassword) {\n                    email\n                  }\n                }\n              `,\n\n      variables: {\n        email: email,\n        userPassword: userPassword\n      }\n    }\n\n    fetch('http://localhost:5000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        \n        if (res.status !== 200 && res.status !== 201) {\n          \n          throw new Error('Failed here!');\n        }\n        this.props.history.push('/')\n\n      })\n      .catch(err => {\n        \n      });\n  }\n\n  render() {\n    const { classes } = this.props\n    return (<Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Reset Password\n            </Typography>\n        <form className={classes.form} onSubmit={this.resetPasswordHandler} noValidate>\n\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                label=\"New Password\"\n                type=\"password\"\n                id=\"password\"\n                onChange={(e) => {\n                  this.state.newPassword = e.target.value\n                }}\n\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"password\"\n                onChange={(e) => {\n                  this.state.confirmPassword = e.target.value\n                }}\n\n              />\n            </Grid>\n          </Grid>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            CONFIRM\n              </Button>\n\n        </form>\n      </div>\n\n    </Container>)\n  }\n}\n\nexport default withStyles(useStyles)(ResetPasswordPage)\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AuthContext from '../context/auth_context'\nimport ExitAppIcon from '@material-ui/icons/ExitToApp'\nimport PublishIcon from '@material-ui/icons/Publish';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Container, CardContent } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Input from '@material-ui/core/Input'\n\n\n\nconst useStyles = theme => ({\n\n  root: {\n    maxWidth: 245,\n  },\n  media: {\n    paddingTop: '100%',\n    margin: '5%'\n\n  },\n  title: {\n    flex: 1\n  },\n  upload: {\n    margin: '5%'\n  }\n});\nclass ProfilePage extends Component {\n\n  static contextType = AuthContext;\n\n  state = {\n    showBrowse: false,\n    showEdit: true,\n    buttonText: \"EDIT\",\n    file: null,\n    display: localStorage.getItem('image')\n  }\n\n  \n\n  updateImage = () => {\n    const email = localStorage.getItem('email')\n    const imageName = localStorage.getItem('image')\n    \n    var requestBody = {\n      query: `\n                mutation updateImage($email: String!, $imageName: String!) {\n                  updateImage(email: $email, imageName: $imageName) {\n                    email\n                  }\n                }\n              `,\n\n      variables: {\n        email: email,\n        imageName: imageName\n      }\n    }\n    \n    fetch('http://localhost:5000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        window.location.reload(false);\n      })\n      .catch(err => {\n        \n      });\n  }\n\n  uploadFile = event => {\n\n    event.preventDefault();\n    \n    const email = localStorage.getItem('email')\n    const _id = localStorage.getItem('_id')\n    const file = this.state.file\n    var form_data = new FormData();\n    form_data.append('email', email)\n    form_data.append('name_id', _id)\n    form_data.append('myfile', file)\n\n\n    /*var requestBody = {\n      query: `\n              \n              mutation upload($email: String!, $file: Upload!) {\n                upload(email: $email, file: $file) \n              }\n              \n            `,\n      variables: {\n        email: email,\n        file: file,\n        id : _id\n      }\n    };*/ \n    fetch('http://localhost:5000/uploadjavatpoint', {\n      method: 'POST',\n      body: form_data,\n    }).then(response => response.json())\n    .then(result => {\n      \n      localStorage.setItem('image' , result)\n      this.setState({display : result})\n      this.setState({showBrowse : false})\n      this.setState({showEdit : true})\n      this.setState({buttonText : \"EDIT\"})\n\n      this.updateImage()\n     \n      \n    })\n    .catch(error => {\n      \n    });\n  }\n  render() {\n    const { classes } = this.props\n    \n    return (<>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title}>\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => { this.context.logout() }}\n            startIcon={<ExitAppIcon />}\n          >\n            Logout\n      </Button>\n        </Toolbar>\n      </AppBar>\n\n      <Container component=\"main\" maxWidth=\"xs\" >\n        <Box padding=\"2rem\" borderBottom=\"3rem\" >\n          <CssBaseline />\n          <div className={classes.paper}>\n            <Card >\n              <CardHeader\n                title= {this.context.name}\n                subheader={this.context.email}\n              />\n              <CardMedia\n                className={classes.media}\n                image = {\"http://localhost:5000/\" +localStorage.getItem('image')}\n              />\n            \n              <CardContent>\n                <Grid container justify=\"center\">\n                  <form onSubmit={this.uploadFile}>\n\n                    {this.state.showBrowse && (\n                      <>\n                        <Grid container justify=\"center\">\n                          <Input\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            hidden=\"true\"\n                            justify=\"flex-end\"\n                            type=\"file\"\n                            inputProps={{ accept: 'image/*' }}\n                            onChange={(e) => {\n                              this.setState({ file: e.target.files[0] })\n                            }}\n                            required\n                            startIcon={<PublishIcon />}\n                          >\n                          </Input>\n                        </Grid>\n                        <Grid container justify=\"center\">\n                          <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            type=\"submit\"\n                            className={classes.upload}\n\n                            startIcon={<PublishIcon />}\n                          >\n                            UPLOAD\n                          </Button>\n                        </Grid>\n                      </>\n                    )}\n\n                    {this.state.showEdit && (\n                      <Grid container justify=\"center\">\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          \n                          className={classes.upload}\n                          onClick={(event) => {\n                            event.preventDefault();\n                            this.setState({ showBrowse: true, showEdit: false })\n                            \n                          }}\n                          startIcon={<EditIcon />}\n                        >\n                          EDIT\n                        </Button>\n                      </Grid>\n                    )}\n                  </form>\n                </Grid>\n              </CardContent>\n            </Card>\n          </div>\n        </Box>\n      </Container>\n    </>)\n  }\n}\n\nexport default withStyles(useStyles)(ProfilePage)\n","import React, {Component} from 'react'\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from \"react-router-dom\";\n\nimport {BrowserRouter, Redirect} from 'react-router-dom'\n\n\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = theme => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n  \nclass ForgotPasswordPage extends Component{\n\n    state = {\n        isOpen : false,\n        email : \"\",\n        dialogText : null,\n        dialogTitle : null\n    }\n      \n\n    sendEmailHandler = event => {\n        event.preventDefault();\n        const email = this.state.email\n    \n        if (email.trim().length === 0) {\n          return;\n        }\n\n        var requestBody = {\n            query: `\n              query forgotPassword($email: String!) {\n                forgotPassword(email: $email){\n                    email\n                }\n              }\n            `,\n            variables: {\n              email: email,\n            }\n          };\n\n        \n        \n\n        fetch('http://localhost:5000/graphql', {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n            .then(res => {\n              if (res.status !== 200 && res.status !== 201) {\n              this.state.dialogText = \"There was some issue with the process. Please check if you have entered the right email address and try again\";\n              this.state.dialogTitle = \"ERROR\"\n              this.setState({isOpen:true});\n                throw new Error('Failed here!');\n              }\n              this.state.dialogText = \"We have sent a reset password email to \"+this.state.email+\". Please click on the reset password link\";\n              this.state.dialogTitle = \"SENT\"\n              this.setState({isOpen:true});\n              localStorage.setItem('forgottenEmail' , email)\n              \n            })\n            .catch(err => {\n                \n              });\n        \n        \n    }     \n    \n  \n    render(){\n        const {classes} = this.props\n       \n\n  const handleClickOpen = () => {\n    this.setState({isOpen:true})\n  };\n\n  const handleClose = () => {\n    this.setState({isOpen:false})\n  };\n\n\n        return( <Container component=\"main\" maxWidth=\"xs\" >\n        <CssBaseline />\n        <div className={classes.paper}>\n         \n          <Typography component=\"h5\" variant=\"h5\">\n            Forgot your password? Don't worry . Tell us the email address you registered with\n          </Typography>\n          <form className={classes.form} onSubmit = {this.sendEmailHandler}>\n            <Grid container spacing={2}>\n              \n              \n            <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  onChange = {(e) => {\n                      this.state.email = e.target.value\n                  }}\n                  \n\n                />\n              </Grid>\n              <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  Login\n                </Link>\n              </Grid>\n            </Grid>\n              \n              \n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              \n            >\n              SEND MAIL\n            </Button>\n          </form>\n        </div>\n        \n    <Dialog\n      open = {this.state.isOpen}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{this.state.dialogTitle}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {this.state.dialogText}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        \n        <Button onClick={()=>{this.props.history.push('/')}} color=\"primary\" autoFocus>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n      </Container>)\n    }\n}\n\nexport default withStyles(useStyles)(ForgotPasswordPage)\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom'\nimport LoginPage from './pages/login'\nimport SignUpPage from './pages/signup'\nimport ResetPasswordPage from './pages/reset'\nimport ProfilePage from './pages/profile'\nimport ForgotPasswordPage from './pages/forgot_password'\nimport AuthContext from './context/auth_context'\n\nimport ReactDOM from 'react-dom';\nimport { createUploadLink } from 'apollo-upload-client';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from 'react-apollo';\n\nclass App extends Component {\n  state = {\n    token: localStorage.getItem('token'),\n    _id : null ,\n    email: null,\n    name: localStorage.getItem('name'),\n    image: localStorage.getItem('image')\n  }\n\n  //check redirection for reset\n  forgottenEmail = localStorage.getItem('forgottenEmail')\n\n  login = (email, token, name , _id, tokenExpiry , image) => {\n\n    if(!image) image ='profile.png'\n   \n    localStorage.setItem('token', token)\n    localStorage.setItem('name', name)\n    localStorage.setItem('email', email)\n    localStorage.setItem('_id' , _id)\n    localStorage.setItem('image' , image)\n    \n    this.setState({ email: email, token: token, name: name , _id : _id , image : image})\n  }\n\n  updateImage = (image) => {\n    localStorage.setItem('image' , image)\n  }\n  logout = () => {\n    this.setState({ email: null, name: null, token: null , _id : null , image:null})\n    localStorage.removeItem('token')\n    localStorage.removeItem('forgottenEmail')\n    localStorage.removeItem('_id')\n  }\n  render() {\n    return (\n      <AuthContext.Provider value={{\n        _id : this.state._id,\n        token: this.state.token,\n        email: this.state.email,\n        name: this.state.name,\n        image : this.state.image,\n        login: this.login,\n        logout: this.logout\n      }}>\n        <BrowserRouter>\n          <Switch>\n            <Redirect from=\"/\" to=\"/login\" exact />\n            {!this.state.token && <Redirect from=\"/profile\" to=\"/login\" exact />}\n            {this.state.token && <Redirect from=\"/login\" to=\"/profile\" exact />}\n            \n            <Route path=\"/login\" component={LoginPage} />\n            <Route path=\"/sign_up\" component={SignUpPage} />\n            <Route path=\"/reset_password/:id\" component={ResetPasswordPage} />\n            <Route path=\"/profile\" component={ProfilePage} />\n\n            <Route path=\"/forgot_password\" component={ForgotPasswordPage} />\n          </Switch>\n        </BrowserRouter>\n      </AuthContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}